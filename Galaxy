//Global Scope
float[]x = new float[200]; 
float[]y = new float[200];
float[]z = new float[200];

float[]x1 = new float[200];
float[]y1 = new float[200];
float[]z1 = new float[200];

float[]speed = new float[200]; 

PImage sun; 
PImage planet1; 
PImage planet2;
PImage planet3; 

float time = 0; 
float a; 
float b; 

/* 
sin and cos forumla:
  a = sin( time/S ); //divide in order to seperate planet rotation speed 
  b = cos( time/S );
  image(planet2, C + a*Rx, C + b*Ry, 120, 120);

  S: speed .... divide by a larger number to go slower
  C: center ... this is the center of the rotation
  R: radius ... 
*/

void setup() {
  size(600, 600, P3D); 
  background(0); 
  smooth(); 
  strokeWeight(5); 
  
  hint(ENABLE_DEPTH_SORT);
  
  sun = loadImage("thesun.png");
  planet1 = loadImage("planet_1.png"); 
  planet2 = loadImage("planet_2.png"); 
  planet3 = loadImage("planet_3.png"); 
  
//Stars
  int i = 0; 
   while(i<200) {
    x[i] = random(0, width);
    y[i] = random(0, height);
    z[i] = random(0, width*2 - height);
    speed[i] = random(1, 5);
    i = i + 1;
   }
   
  }
  
void draw() { 
  background(0);
  time = time + .01;
 //Stars
  int i = 0;
  while(i<200) { 
    stroke(random(2*i), random(1.5*i), random(2.5*i));
    point(x[i], y[i], z[i]);
    point(x1[i], y1[i], z1[i]);
    
    y[i] = y[i] - speed[i];
    x[i] = x[i] - speed[i];
    z[i] = z[i] - speed[i];

    y1[i] = y1[i] + speed[i];
    x1[i] = x1[i] + speed[i];
    z1[i] = z1[i] + speed[i];
    
    if(y[i] < 0) {
      y[i] = height; 
      y1[i] = height; 
    }
    
    if(x[i] < 0) {
      x[i] = width; 
      x1[i] = 0; 
    }
    
    if(z[i] < 0) {
      z[i] = width * 2 - height; 
      z1[i] = 0; 
    }
    i = i + 1; 
 } 
//Planets
drawSun();
drawPlanet1(); 
drawPlanet2(); 
drawPlanet3(); 

}

void drawSun() { 
  pushMatrix();
     translate(0, 120, -400); 
     imageMode(CENTER); 
     image(sun, height/2, width/2-100, 300, 300);
  popMatrix();

} 
void drawPlanet1() { 
   a = sin(time); //divide to seperate planet rotation speed
   b = cos(time); 
   pushMatrix(); 
       rotateX( -PI/3 );
       translate(300 + a*500, 600 + b*500 );
       rotateX( PI/3 );
       image(planet1, 0,0, 170, 170); 
   popMatrix(); 
}
void drawPlanet2() {
  a = sin(time/1.3); 
  b = cos(time/1.3);
    
  pushMatrix(); 
    rotateX( -PI/4 ); 
    translate(300 + a*300, 600 + b*300); 
    rotateX( PI/4 ); 
    image(planet2, 0, 0, 170, 170);
  popMatrix(); 
   
}
void drawPlanet3() {
  a = sin(time/1.5);
  b = cos(time/1.5); 
  
  pushMatrix(); 
    rotateX( -PI/5 ); 
    translate(300 + a*400, 500 + b*400); 
    rotateX( PI/5 ); 
    image(planet3, 100, 100, 120, 120); 
  popMatrix();    
}
